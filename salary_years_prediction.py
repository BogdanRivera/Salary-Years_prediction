# -*- coding: utf-8 -*-
"""Salary-Years_Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BSgR0ahOgIRLO9zlBl5SkicuKP3fc305

# Salary - Years worked prediction

In this project, we use a simple linear regression to predict the relation between Years worked and salary. To predict the objetive variable a model from sklearn library is used. In this case an CSV file is imported to analyze the information and find the independent and dependent variables.

Importing libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import linear_model
from sklearn.metrics import r2_score

"""In first instance, data should be read from a CSV file:"""

data = pd.read_csv('Salary_Data.csv')
data.head()

"""Verify that the dataset does not have null values"""

data.any().isna()

"""The dataset doesn't have null values. In this dataset, the only value it can be predict is the salary in order to years experience. Plotting this variables:"""

cdf = data[['Years of Experience','Salary']].dropna()
cdf.hist()
plt.show()

plt.scatter(x = cdf['Years of Experience'],y = cdf.Salary, color = 'orange')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.title('Relation Years of Experience - Salary')
plt.show()

"""In this case we can observe in this variables that the relation is a linear case. Separating the train variables and test variables:"""

mask = np.random.rand(len(cdf)) < 0.8 #80 percent of the data
train = cdf[mask]
test = cdf[~mask]

"""Distribution of the train model:"""

plt.scatter(x = train['Years of Experience'],y = train.Salary,color = 'blue')

"""Creating an instance of linear regression and training the model:"""

regr = linear_model.LinearRegression()
train_x = np.asanyarray(train[['Years of Experience']])
train_y = np.asanyarray(train[['Salary']])
regr.fit(train_x, train_y)
# The coefficients
print ('Coefficients: ', regr.coef_)
print ('Intercept: ',regr.intercept_)

"""Then we have to use the test data for predict any value:"""

x_test = np.asanyarray(test[['Years of Experience']])
y_hat = regr.predict(x_test)
y_hat

"""The model is trained and we can predict any value:"""

response = float(input("Years of experience: "))
print(f"The salary of a person who has {response} years of experience is: ",regr.predict([[response]])[0][0])